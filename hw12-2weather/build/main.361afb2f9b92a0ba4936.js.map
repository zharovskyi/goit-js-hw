{"version":3,"sources":["webpack:///./index.js"],"names":["__webpack_require__","r","__webpack_exports__","pnotify_dist_es_PNotify__WEBPACK_IMPORTED_MODULE_2__","refs","searchForm","document","querySelector","section","icon","location","temp","humidity","wind","conditions","baseUrl","addEventListener","e","preventDefault","query","currentTarget","elements","city","value","fetch","then","response","json","data","src","current","condition","alt","text","textContent","name","temp_c","wind_kph","classList","remove","option","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","catch","error","PNotify","alert"],"mappings":"kHAAAA,EAAAC,EAAAC,GAAAF,EAAA,QAAAA,EAAA,YAAAG,EAAAH,EAAA,QAAAA,EAAA,QAOA,MACMI,EAAO,CACTC,WAAYC,SAASC,cAAc,gBACnCC,QAASF,SAASC,cAAc,YAChCE,KAAMH,SAASC,cAAc,SAC7BG,SAAUJ,SAASC,cAAc,+BACjCI,KAAML,SAASC,cAAc,2BAC7BK,SAAUN,SAASC,cAAc,+BACjCM,KAAMP,SAASC,cAAc,2BAC7BO,WAAYR,SAASC,cAAc,iCACnCQ,QAAS,oFAGbX,EAAKC,WAAWW,iBAAiB,SAEjC,SAAkCC,GAC9BA,EAAEC,kBAeaC,EAdIF,EAAEG,cAAcC,SAASC,KAAKC,MAgB1CC,MAAMpB,EAAKW,cAAgBI,KAASM,KAAKC,GAAYA,EAASC,SAfhDF,KAAKG,IACvBxB,EAAKK,KAAKoB,IAAID,EAAKE,QAAQC,UAAUtB,KACrCL,EAAKK,KAAKuB,IAAMJ,EAAKE,QAAQC,UAAUE,KACvC7B,EAAKM,SAASwB,YAAcN,EAAKlB,SAASyB,KAC1C/B,EAAKO,KAAKuB,YAAcN,EAAKE,QAAQM,OACrChC,EAAKQ,SAASsB,YAAcN,EAAKE,QAAQlB,SACzCR,EAAKS,KAAKqB,YAAcN,EAAKE,QAAQO,SACrCjC,EAAKU,WAAWoB,YAAcN,EAAKE,QAAQC,UAAUE,KACrD7B,EAAKI,QAAQ8B,UAAUC,OAAO,eAKrC,IAAmBpB,IASS,MACvB,MAAMqB,EAAS,CACXC,WAAY,OAIhB,OAAO,IAAIC,QAAQ,CAACC,EAASC,KACzBC,UAAUC,YAAYC,mBAAmBJ,EAAQC,EAAOJ,MAGjEO,GACEtB,KAAKf,GAEIc,4FAA8Bd,EAASsC,OAAOC,YAAYvC,EAASsC,OAAOE,aACjFzB,KAAKC,GAAYA,EAASC,QAAQF,KAAKG,IAEnCxB,EAAKK,KAAKoB,IAAID,EAAKE,QAAQC,UAAUtB,KACrCL,EAAKK,KAAKuB,IAAMJ,EAAKE,QAAQC,UAAUE,KACvC7B,EAAKM,SAASwB,YAAcN,EAAKlB,SAASyB,KAC1C/B,EAAKO,KAAKuB,YAAcN,EAAKE,QAAQM,OACrChC,EAAKQ,SAASsB,YAAcN,EAAKE,QAAQlB,SACzCR,EAAKS,KAAKqB,YAAcN,EAAKE,QAAQO,SACrCjC,EAAKU,WAAWoB,YAAcN,EAAKE,QAAQC,UAAUE,KACrD7B,EAAKI,QAAQ8B,UAAUC,OAAO,gBAGpCY,MAAMC,IACJC,IAAQC,MAAM","file":"main.361afb2f9b92a0ba4936.js","sourcesContent":["import './styles.css';\nimport { resolve } from 'url';\nimport PNotify from 'pnotify/dist/es/PNotify';\nimport \"pnotify/dist/PNotifyBrightTheme.css\";\n\n\n\nconst baseUrl ='https://api.apixu.com/v1/current.json?key=f795b80deb1b45309ba93327190208';\nconst refs = {\n    searchForm: document.querySelector('#search-form'),\n    section: document.querySelector('#weather'),\n    icon: document.querySelector('.icon'),\n    location: document.querySelector('span[data-field=\"location\"]'),\n    temp: document.querySelector('span[data-field=\"temp\"]'),\n    humidity: document.querySelector('span[data-field=\"humidity\"]'),\n    wind: document.querySelector('span[data-field=\"wind\"]'),\n    conditions: document.querySelector('span[data-field=\"conditions\"]'),\n    baseUrl: 'https://api.apixu.com/v1/current.json?key=f795b80deb1b45309ba93327190208&lang=uk',\n}\n\nrefs.searchForm.addEventListener('submit', searchFormSubmitHeandler);\n\nfunction searchFormSubmitHeandler(e){\n    e.preventDefault();\n    const searchCity = e.currentTarget.elements.city.value;\n   fetchCity(searchCity).then(data =>{\n       refs.icon.src=data.current.condition.icon;\n       refs.icon.alt = data.current.condition.text; \n       refs.location.textContent = data.location.name;\n       refs.temp.textContent = data.current.temp_c;\n       refs.humidity.textContent = data.current.humidity;\n       refs.wind.textContent = data.current.wind_kph;\n       refs.conditions.textContent = data.current.condition.text;\n       refs.section.classList.remove(\"is-hidden\");\n   })\n   \n}\n\nfunction fetchCity(query) {\n    \n    return fetch(refs.baseUrl + `&q=${query}`).then(response => response.json());\n    \n}\n\n\n\n\n const getCurrentPosition = () => {\n     const option = {\n         maximumAge: 108000000,\n         \n         \n     };\n     return new Promise((resolve, reject) => {\n         navigator.geolocation.getCurrentPosition(resolve,reject,option);\n     })\n }\ngetCurrentPosition()\n .then(location => {    \n    // console.log('location :', location);\n    return fetch(`${baseUrl}&lang=uk&q=${location.coords.latitude},${location.coords.longitude}`)\n   .then(response => response.json()).then(data => {\n    //    console.log(data);\n        refs.icon.src=data.current.condition.icon;\n        refs.icon.alt = data.current.condition.text; \n        refs.location.textContent = data.location.name;\n        refs.temp.textContent = data.current.temp_c;\n        refs.humidity.textContent = data.current.humidity;\n        refs.wind.textContent = data.current.wind_kph;\n        refs.conditions.textContent = data.current.condition.text;\n        refs.section.classList.remove(\"is-hidden\");\n   })\n })\n .catch(error => {\n    PNotify.alert('Does not has date locattion,please enter the city');\n })"],"sourceRoot":""}